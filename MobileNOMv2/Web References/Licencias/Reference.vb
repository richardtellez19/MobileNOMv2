'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace Licencias
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Service1Soap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PermLicenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private compruebaTimbresRestantesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneSysInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizaSysInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StatusFoliosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TablaPreciosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SolicitarFoliosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private obtieneFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.MobileNOMv2.My.MySettings.Default.MobileNOMv2_Licencias_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event PermLicenciaCompleted As PermLicenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event compruebaTimbresRestantesCompleted As compruebaTimbresRestantesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneSysInfoCompleted As ObtieneSysInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizaSysInfoCompleted As ActualizaSysInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event StatusFoliosCompleted As StatusFoliosCompletedEventHandler
        
        '''<remarks/>
        Public Event TablaPreciosCompleted As TablaPreciosCompletedEventHandler
        
        '''<remarks/>
        Public Event SolicitarFoliosCompleted As SolicitarFoliosCompletedEventHandler
        
        '''<remarks/>
        Public Event obtieneFechaCompleted As obtieneFechaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PermLicencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PermLicencia(ByVal noSerie As String, ByVal NumHD As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("PermLicencia", New Object() {noSerie, NumHD})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PermLicenciaAsync(ByVal noSerie As String, ByVal NumHD As String)
            Me.PermLicenciaAsync(noSerie, NumHD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PermLicenciaAsync(ByVal noSerie As String, ByVal NumHD As String, ByVal userState As Object)
            If (Me.PermLicenciaOperationCompleted Is Nothing) Then
                Me.PermLicenciaOperationCompleted = AddressOf Me.OnPermLicenciaOperationCompleted
            End If
            Me.InvokeAsync("PermLicencia", New Object() {noSerie, NumHD}, Me.PermLicenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPermLicenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.PermLicenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PermLicenciaCompleted(Me, New PermLicenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/compruebaTimbresRestantes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function compruebaTimbresRestantes(ByVal RFC_Emisor As String) As Boolean
            Dim results() As Object = Me.Invoke("compruebaTimbresRestantes", New Object() {RFC_Emisor})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub compruebaTimbresRestantesAsync(ByVal RFC_Emisor As String)
            Me.compruebaTimbresRestantesAsync(RFC_Emisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub compruebaTimbresRestantesAsync(ByVal RFC_Emisor As String, ByVal userState As Object)
            If (Me.compruebaTimbresRestantesOperationCompleted Is Nothing) Then
                Me.compruebaTimbresRestantesOperationCompleted = AddressOf Me.OncompruebaTimbresRestantesOperationCompleted
            End If
            Me.InvokeAsync("compruebaTimbresRestantes", New Object() {RFC_Emisor}, Me.compruebaTimbresRestantesOperationCompleted, userState)
        End Sub
        
        Private Sub OncompruebaTimbresRestantesOperationCompleted(ByVal arg As Object)
            If (Not (Me.compruebaTimbresRestantesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent compruebaTimbresRestantesCompleted(Me, New compruebaTimbresRestantesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneSysInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneSysInfo(ByVal RFC_Emisor As String) As String
            Dim results() As Object = Me.Invoke("ObtieneSysInfo", New Object() {RFC_Emisor})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneSysInfoAsync(ByVal RFC_Emisor As String)
            Me.ObtieneSysInfoAsync(RFC_Emisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneSysInfoAsync(ByVal RFC_Emisor As String, ByVal userState As Object)
            If (Me.ObtieneSysInfoOperationCompleted Is Nothing) Then
                Me.ObtieneSysInfoOperationCompleted = AddressOf Me.OnObtieneSysInfoOperationCompleted
            End If
            Me.InvokeAsync("ObtieneSysInfo", New Object() {RFC_Emisor}, Me.ObtieneSysInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneSysInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneSysInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneSysInfoCompleted(Me, New ObtieneSysInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActualizaSysInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizaSysInfo(ByVal RFC_Emisor As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizaSysInfo", New Object() {RFC_Emisor})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizaSysInfoAsync(ByVal RFC_Emisor As String)
            Me.ActualizaSysInfoAsync(RFC_Emisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizaSysInfoAsync(ByVal RFC_Emisor As String, ByVal userState As Object)
            If (Me.ActualizaSysInfoOperationCompleted Is Nothing) Then
                Me.ActualizaSysInfoOperationCompleted = AddressOf Me.OnActualizaSysInfoOperationCompleted
            End If
            Me.InvokeAsync("ActualizaSysInfo", New Object() {RFC_Emisor}, Me.ActualizaSysInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizaSysInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizaSysInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizaSysInfoCompleted(Me, New ActualizaSysInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StatusFolios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StatusFolios(ByVal RFC_Emisor As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("StatusFolios", New Object() {RFC_Emisor})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StatusFoliosAsync(ByVal RFC_Emisor As String)
            Me.StatusFoliosAsync(RFC_Emisor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StatusFoliosAsync(ByVal RFC_Emisor As String, ByVal userState As Object)
            If (Me.StatusFoliosOperationCompleted Is Nothing) Then
                Me.StatusFoliosOperationCompleted = AddressOf Me.OnStatusFoliosOperationCompleted
            End If
            Me.InvokeAsync("StatusFolios", New Object() {RFC_Emisor}, Me.StatusFoliosOperationCompleted, userState)
        End Sub
        
        Private Sub OnStatusFoliosOperationCompleted(ByVal arg As Object)
            If (Not (Me.StatusFoliosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StatusFoliosCompleted(Me, New StatusFoliosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TablaPrecios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TablaPrecios() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TablaPrecios", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TablaPreciosAsync()
            Me.TablaPreciosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TablaPreciosAsync(ByVal userState As Object)
            If (Me.TablaPreciosOperationCompleted Is Nothing) Then
                Me.TablaPreciosOperationCompleted = AddressOf Me.OnTablaPreciosOperationCompleted
            End If
            Me.InvokeAsync("TablaPrecios", New Object(-1) {}, Me.TablaPreciosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTablaPreciosOperationCompleted(ByVal arg As Object)
            If (Not (Me.TablaPreciosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TablaPreciosCompleted(Me, New TablaPreciosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SolicitarFolios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SolicitarFolios(ByVal CantidadFolios As Integer, ByVal Licencia As String, ByVal RFC As String, ByVal Gratuitos As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("SolicitarFolios", New Object() {CantidadFolios, Licencia, RFC, Gratuitos})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SolicitarFoliosAsync(ByVal CantidadFolios As Integer, ByVal Licencia As String, ByVal RFC As String, ByVal Gratuitos As Boolean)
            Me.SolicitarFoliosAsync(CantidadFolios, Licencia, RFC, Gratuitos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SolicitarFoliosAsync(ByVal CantidadFolios As Integer, ByVal Licencia As String, ByVal RFC As String, ByVal Gratuitos As Boolean, ByVal userState As Object)
            If (Me.SolicitarFoliosOperationCompleted Is Nothing) Then
                Me.SolicitarFoliosOperationCompleted = AddressOf Me.OnSolicitarFoliosOperationCompleted
            End If
            Me.InvokeAsync("SolicitarFolios", New Object() {CantidadFolios, Licencia, RFC, Gratuitos}, Me.SolicitarFoliosOperationCompleted, userState)
        End Sub
        
        Private Sub OnSolicitarFoliosOperationCompleted(ByVal arg As Object)
            If (Not (Me.SolicitarFoliosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SolicitarFoliosCompleted(Me, New SolicitarFoliosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/obtieneFecha", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function obtieneFecha() As Date
            Dim results() As Object = Me.Invoke("obtieneFecha", New Object(-1) {})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub obtieneFechaAsync()
            Me.obtieneFechaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub obtieneFechaAsync(ByVal userState As Object)
            If (Me.obtieneFechaOperationCompleted Is Nothing) Then
                Me.obtieneFechaOperationCompleted = AddressOf Me.OnobtieneFechaOperationCompleted
            End If
            Me.InvokeAsync("obtieneFecha", New Object(-1) {}, Me.obtieneFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnobtieneFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.obtieneFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent obtieneFechaCompleted(Me, New obtieneFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub PermLicenciaCompletedEventHandler(ByVal sender As Object, ByVal e As PermLicenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PermLicenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub compruebaTimbresRestantesCompletedEventHandler(ByVal sender As Object, ByVal e As compruebaTimbresRestantesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class compruebaTimbresRestantesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ObtieneSysInfoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneSysInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneSysInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub ActualizaSysInfoCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizaSysInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizaSysInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub StatusFoliosCompletedEventHandler(ByVal sender As Object, ByVal e As StatusFoliosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StatusFoliosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub TablaPreciosCompletedEventHandler(ByVal sender As Object, ByVal e As TablaPreciosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TablaPreciosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SolicitarFoliosCompletedEventHandler(ByVal sender As Object, ByVal e As SolicitarFoliosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SolicitarFoliosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub obtieneFechaCompletedEventHandler(ByVal sender As Object, ByVal e As obtieneFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class obtieneFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
End Namespace
